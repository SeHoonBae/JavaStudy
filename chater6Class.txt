다형성
- 하나의 타입에 여러 객체를 대입함으로써 다양한 기능을 이용할 수 있도록 해준다.
- 자바는 다형성을 위해 부모 클래스 또는 인터페이스의 타입 변환을 허용한다.
- 부모 타입에는 모든 자식 객체가 대입될 수 있고, 인터페이스 타입에는 모든 구현 객체가 대입될 수 있다.

파일이름과 동일한 클래스 선언에만 public 접근 제한자를 붙일 수 있다.

new 클래스();
- new 연산자는 힙 영역에 객체를 생성시킨 후 객체의 주소를 리턴하도록 되어 있다.

필드를 변수라고 부르지 않음
초기값이 지정되지 않은 필드들은 객체 생성 시 자동으로 기본 초기값으로 설정된다.

this()로 생성자를 호출 하는것은 작은데서 큰것을 불러오는게 좋음
ex)
Car(String model1){
	this(model,"은색",250);
}
Car(String model, String color){
	this(model, color, 250);
}

Car(String model, String color, int maxSpeed){
	this.model = model;
	this.color = color;
	this.maxSpeed = maxSpeed;
}

메소드를 오버로딩할 때 주의할 점은 매개 변수의 타입과 개수, 순서가 똑같을 경우 매개 변수 이름만 바꾸는 것은 메소드 오버로딩이 X
또한 리턴 타입만 다르고 매개 변수가 동일하다면 오버로딩 X

정적필드로 선언할 것인가의 판단 기준은 객체마다 가지고 있어야 할 데이터라면 인스턴스 필드로 선언하고, 객체마다 가지고 있을 필요성이 없는 공용적인
데이터라면 정적 필드로 선언하는 것이 좋다

정적블록
static{ }
ex)
static String company = "Samsung";
static String model = "LCD";
static String info;

static{
	info = company + "-" + model;	-> Samsung-LCD 가 info에 들어감
}

싱글톤 - 객체를 하나만 만드는 경우
생성자 private
클래스내에서 private static 클래스 변수명 = new 클래스();
메소드를 이용하여 접근

클래스에 적용할 수 있는 접근 제한은 public과 defult 두가지뿐이다.
클래스가 public 접근 제한을 가지면 기본 생성자도 default 접근 제한을 가지고, 클래스가 public 접근 제한을 가지면 기본 생성자도 public 접근 제한을 가진다, 기본이란 자동생성되는 생성자를 뜻함
필드와 메소드가 public 접근 제한을 가질 경우 클래스도 public 접근 제한을 가져야 한다.

setter / getter 는 필드를 수정하는 용도
생성자는 초기화하는 용도, 유효검사를 하기 위해 직접적으로 초기화 X
필드타입이 boolean 일 경우 Getter는 get으로 시작하지 않고 is로 시작하는 것이 관례

어노테이션(메타데이터) 컴파일 과정과 실행 과정에서 코드를 어떻게 컴파일하고 처리할 것인지를 알려주는 정보












